image: python:3.8
stages:
  - test
  - deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip

# Feel free to remove this in your generated project.
.disable_on_template: &disable_on_template
  rules:
    - if: '$CI_COMMIT_REF_NAME != "template"'

.django_before_script: &django_before_script |-
  pip install -r requirements.txt
  python manage.py collectstatic --no-input
  python manage.py makemigrations
  python manage.py migrate

.coverage_artifacts: &coverage_artifacts
  artifacts:
    paths:
      - .coverage*


UnitTest:
  <<: *disable_on_template
  <<: *coverage_artifacts
  stage: test
  before_script:
    - *django_before_script
  script:
    - coverage run --parallel --include="./*" --omit="manage.py,project_name/*"
      manage.py test --exclude-tag=functional

FunctionalTest:
  <<: *disable_on_template
  <<: *coverage_artifacts
  stage: test
  before_script:
    - apt-get update -q && apt-get install -yq chromium-driver
    - *django_before_script
  script:
    - coverage run --parallel --include="./*" --omit="manage.py,project_name/*"
      manage.py test --tag=functional



Deployment:
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
  image: ruby:2.7
  stage: deploy
  before_script:
    - gem install dpl
    - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
  script:
    - dpl --provider=heroku --app=$HEROKU_APPNAME --api-key=$HEROKU_APIKEY
    - heroku run --app $HEROKU_APPNAME migrate
  environment:
    name: production
    url: https://$HEROKU_APPNAME.herokuapp.com
